@model E_Diary.WEB.Data.Entities.TeacherGroupSubject
@using E_Diary.WEB.Data.Entities
@using System.Globalization
@inject E_Diary.WEB.Data.ASPIdentityDBContext context
@{
    Teacher teacher = context.Teachers.FirstOrDefault(
        t => t.User.UserName == User.Identity.Name
    );
    IEnumerable<Lesson> Lessons = context.Lessons.Where(l => l.LessonInfo.Id == Model.Id).OrderBy(l => l.Date).ThenBy(l => l.LessonOnDayNumber);
}
<nav class="mb-4">
    <div class="border border-dark rounded-2">
        <div class="container-fluid d-flex">
            <div class="col-1 border-end border-dark" valign="middle" width="120px">
                <h3 class="fw-bold mt-4 mb-4 text-center">
                    @Model.Group.Year@Model.Group.Literal
                </h3>
            </div>
            <div class="col-6 ms-2 mt-2" valign="middle">
                <div class="selection selection-choose-classes">
                    @foreach (TeacherGroupSubject tgs in context.TeacherGroupSubjects.AsEnumerable()
                    .Where(t => t.Teacher.Id == teacher.Id).DistinctBy(t => t.Group.Id))
                    {
                        if (tgs.Group.Id == Model.Group.Id)
                        {
                            <span class="btn btn-outline-primary btn-outline-darkborder active"
                                  style="pointer-events:none" data-toggle="button"
                                  aria-pressed="true" autocomplete="off" role="button">
                                @tgs.Group.Year@tgs.Group.Literal
                            </span>
                        }
                        else
                        {
                            <a asp-action="Index" asp-route-groupId="@tgs.Group.Id"
                               class="btn btn-outline-primary btn-outline-darkborder"
                               data-toggle="button" aria-pressed="false"
                               autocomplete="off" role="button">
                                @tgs.Group.Year@tgs.Group.Literal
                            </a>
                        }
                    }
                </div>
            </div>
            <div class="col-5 ms-2 mt-2" valign="middle">
                <div class="selection selection-choose-classes">
                    @foreach (TeacherGroupSubject tgs in context.TeacherGroupSubjects.AsEnumerable()
                    .Where(t => t.Teacher.Id == teacher.Id && t.Group.Id == Model.Group.Id))
                    {
                        if (tgs.Subject.Id == Model.Subject.Id)
                        {
                            <span class="btn btn-outline-primary btn-outline-darkborder active"
                                  style="pointer-events:none" data-toggle="button"
                                  aria-pressed="true" autocomplete="off" role="button">
                                @tgs.Subject.Name
                            </span>
                        }
                        else
                        {
                            <a asp-action="Index"
                               asp-route-groupId="@Model.Group.Id"
                               asp-route-subjectId="@tgs.Subject.Id"
                               class="btn btn-outline-primary btn-outline-darkborder"
                               data-toggle="button" aria-pressed="false"
                               autocomplete="off" role="button">
                                @tgs.Subject.Name
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</nav>
<div class="journal-page">
    <div class="content">

        <div id="journal-content" class="">

            <div class="block-table mt-4">

                @{
                    string width = (Lessons.Count() * 75).ToString() + "px";
                }
                <div class="block-table-inner dragscroll" id="dragscroll">
                    <table class="table table-nsu table-journal" style="width: @width">
                        <thead style="width: @width;">
                            <tr>
                                <th class="user journal-first-header" style="left: 0px;">@Model.Subject.Name</th>
                                @foreach (Lesson lesson in Lessons)
                                {
                                    <th class="statement-column journal-first-header attendance mine date-passed" style="height:50px;">
                                        <span>
                                            <div class="p-0 m-0 d-flex row row-cols-1">
                                                <div class="col p-0 m-0">@lesson.Date.Day</div>
                                                <div class="col p-0 m-0">
                                                    @(
                                                        new string(CultureInfo.CurrentCulture.DateTimeFormat
                                                        .MonthGenitiveNames[lesson.Date.Month - 1].Take(3).ToArray())
                                                        )
                                                </div>
                                            </div>
                                        </span>
                                    </th>
                                }
                                <th class="avg journal-first-header">Средняя</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var students = context.Students.Where(s => s.Group.Id == Model.Group.Id).ToList();
                            }
                            @for (int i = 0; i < students.Count(); i++)
                            {
                                <tr>
                                    <td class="user">
                                        <span class="user-num">@(i + 1)</span>
                                        <a target="_blank" href="/">
                                            <span class="d-none d-sm-block user-fullname">@students[i].User.Surname @students[i].User.Name @students[i].User.Patronymic</span>
                                            <span class="d-block d-sm-none user-shortname">@students[i].User.Surname @(students[i].User.Name.First()). @(students[i].User.Patronymic?.First()).</span>
                                        </a>
                                    </td>
                                    @foreach (Lesson lesson in Lessons)
                                    {
                                        Grade? grade = context.Grades.FirstOrDefault(g => g.Lesson.Id == lesson.Id && g.User.Id == students[i].User.Id);
                                        <td class="td-data can-edit mine grade">
                                            <div class="mark-content"><span class="badge badge-grey">@grade?.Value</span></div>
                                            @if (grade != null && grade.IsMissed)
                                            {
                                                <p class="text-danger m-0" style="position:absolute; top:70%; left:5%; font-size:0.7rem;">Н</p>
                                            }
                                            <div class="bg-white p-2 mt-2 form-choice" id="gradeFormDiv" style="display:none; ">
                                                @{
                    /*width:7.5rem; z-index:100; position:absolute; left:-100%; top:95%;*/
                                                }
                                                <form asp-action="SetGrade" class="mark_choice_items_grid">
                                                    <input type="hidden" name="studentId" value="@students[i].Id" />
                                                    <input type="hidden" name="lessonId" value="@lesson.Id" />
                                                    @for (int g = 5; g >= 1; g--)
                                                    {
                                                        @if (g == 5 || g == 1)
                                                        {
                                                            <div class="grade_cont">
                                                                <input type="radio" disabled class="btn-check" name="grade" id="grade 0 @students[i].Id @lesson.Id" value="0" autocomplete="off">
                                                                <label class="btn btn-white grade_badge m-0 p-0" for="grade 0 @students[i].Id @lesson.Id">&nbsp;</label>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="grade_cont">
                                                                @if (grade != null && grade.Value == string.Concat(g.ToString(), "+"))
                                                                {
                                                                    <input type="radio" class="btn-check" checked name="grade" id="grade @g+ @students[i].Id @lesson.Id" value="@g+" autocomplete="off">
                                                                }
                                                                else
                                                                {
                                                                    <input type="radio" class="btn-check" name="grade" id="grade @g+ @students[i].Id @lesson.Id" value="@g+" autocomplete="off">
                                                                }
                                                                <label class="btn btn-secondary border-1 border rounded-1 grade_badge m-0 p-0" for="grade @g+ @students[i].Id @lesson.Id">@g+</label>
                                                            </div>
                                                        }
                                                        <div class="grade_cont">
                                                            @if (grade != null && grade.Value == g.ToString())
                                                            {
                                                                <input type="radio" class="btn-check" checked name="grade" id="grade @g @students[i].Id @lesson.Id" value="@g" autocomplete="off">
                                                            }
                                                            else
                                                            {
                                                                <input type="radio" class="btn-check" name="grade" id="grade @g @students[i].Id @lesson.Id" value="@g" autocomplete="off">
                                                            }
                                                            <label class="btn btn-secondary border-1 border rounded-1 grade_badge m-0 p-0" for="grade @g @students[i].Id @lesson.Id">@g</label>
                                                        </div>
                                                        @if (g != 1)
                                                        {
                                                            <div class="grade_cont">
                                                                @if (grade != null && grade.Value == string.Concat(g.ToString(), "-"))
                                                                {
                                                                    <input type="radio" checked class="btn-check" name="grade" id="grade @g- @students[i].Id @lesson.Id" value="@g-" autocomplete="off">
                                                                }
                                                                else
                                                                {
                                                                    <input type="radio" class="btn-check" name="grade" id="grade @g- @students[i].Id @lesson.Id" value="@g-" autocomplete="off">
                                                                }
                                                                <label class="btn btn-secondary border-1 border rounded-1 grade_badge m-0 p-0" for="grade @g- @students[i].Id @lesson.Id">@g-</label>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="grade_cont">
                                                                <input type="radio" disabled class="btn-check" name="grade" id="grade 0 @students[i].Id @lesson.Id" value="0" autocomplete="off">
                                                                <label class="btn btn-white grade_badge m-0 p-0" for="grade 0 @students[i].Id @lesson.Id">&nbsp;</label>
                                                            </div>
                                                        }
                                                    }

                                                    <div class="d-flex flex-row">
                                                        @if (grade != null && grade.IsMissed == true)
                                                        {
                                                            <input class="form-check-inline flex-grow-1 myCheck" checked type="checkbox" value="True" name="isMissed" id="isMissed @students[i].Id @lesson.Id" />
                                                        }
                                                        else
                                                        {
                                                            <input class="form-check-inline flex-grow-1 myCheck" type="checkbox" value="True" name="isMissed" id="isMissed @students[i].Id @lesson.Id" />
                                                        }
                                                        <label class="flex-grow-1 form-check-label text-black" for="isMissed @students[i].Id @lesson.Id">Неявка</label>

                                                    </div>
                                                    <div class="d-grid gap-2 w-100">
                                                        <input type="submit" class="btn-success btn" value="Ок" />
                                                    </div>
                                                </form>
                                                <form asp-action="RemoveGrade" class="mt-1">
                                                    <input type="hidden" name="studentId" value="@students[i].Id" />
                                                    <input type="hidden" name="lessonId" value="@lesson.Id" />
                                                    <div class="w-100 d-flex flex-row-reverse">
                                                        <input type="submit" class="btn-outline-danger btn btn-sm p-1" value="Очистить" />
                                                    </div>
                                                </form>
                                            </div>
                                            <div class="form-choice" style="display: none;"></div>
                                        </td>
                                    }
                                    <td class="avg">

                                        <div class="mark-content">
                                            @{
                                                int sum = 0;
                                                int count = 0;
                                                string res = string.Empty;
                                                foreach (Grade g in context.Grades.Where(g => g.User.Id == students[i].User.Id && g.Lesson.LessonInfo.Group.Id == Model.Group.Id))
                                                {
                                                    if (g.Value != null && g.Value != string.Empty)
                                                    {
                                                        sum += Convert.ToInt32(g.Value.First().ToString()); count++;
                                                    }
                                                }
                                                if (count != 0)
                                                    res = Math.Round((double)sum / (double)count, 2).ToString();
                                            }
                                            <span class="badge badge-grey">@res</span>
                                            </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let journalContent = $('#journal-content'),
            journalBlock = journalContent.find('.block-table'),
            journalInner = journalContent.find('.block-table-inner'),
            journalTable = journalContent.find('table.table-journal'),
            journalTableHeader = journalTable.find('thead'),
            targetMarkTD = null;
        journalTable
            .on('mouseup', '.td-data.can-edit .mark-content', function (e) {
                    _this = $(this),
                    td = _this.closest('td'),
                    grading = td.data('grading'),
                    form = td.find('.form-choice'),
                    content = $("#mark-choice-" + grading).html();

                let block = journalInner,
                    blockOffset = block.offset(),
                    blockWidth = block[0].clientWidth,
                    blockHeight = block[0].clientHeight,
                    formOffset = form.offset(),
                    formWidth = form[0].clientWidth,
                    formHeight = form[0].clientHeight,
                    defaultLeft = parseInt(form.css('left')),
                    defaultTop = parseInt(form.css('top'));

                // if (blockOffset.left > formOffset.left) {
                //     // не вмещается слева
                //     form.css('left', defaultLeft + blockOffset.left - formOffset.left);
                // }
                // if (blockOffset.left + blockWidth < formOffset.left + formWidth) {
                //     // не вмещается справа
                //     form.css('left', defaultLeft - ((formOffset.left + formWidth) - (blockOffset.left + blockWidth)) - 1);
                // }
                // if (blockOffset.top + blockHeight < formOffset.top + formHeight) {
                //     // не вмещается снизу
                //     form.css('top', defaultTop - ((formOffset.top + formHeight) - (blockOffset.top + blockHeight)) - 1);
                // }
            })
        let objDiv = document.getElementById("dragscroll");
        objDiv.scrollLeft = objDiv.scrollWidth;
        let grade_val;
        var last_selected;
        $(document).ready(() => {

            $('.grade').on('click', ShowChildGradeForm);
            $('.myCheck').on('click', (e) => {
                e.stopPropagation();
                if (this.checked == true)
                    this.checked = false;
                else
                    this.checked = true;
            });
        })
        function HideChildGradeForm(e) {
            // if (e.target !== this)
            //     return;
            $(this).children('#gradeFormDiv').eq(0).css('display', 'none');
            $(this).on('click', ShowChildGradeForm);
        }
        function ShowChildGradeForm(e) {
            e.stopPropagation();
            $(this).children('#gradeFormDiv').css('display', 'block');
            if (last_selected) {
                last_selected.css('display', 'none');
                if (last_selected.is($(this).children('#gradeFormDiv')))
                    last_selected = null;
                else
                    last_selected = $(this).children('#gradeFormDiv');
            }
            else
                last_selected = $(this).children('#gradeFormDiv');
        }
    </script>
}

